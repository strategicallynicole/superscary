/** @jsx jsx */
import React from "react"
import { jsx } from "theme-ui"
import { hidden } from "../styles/utils"

const icons = {
  triangle: {
    shape: (
            <React.Fragment>

<path fill-rule="evenodd" clip-rule="evenodd" d="M78.353 5C76.7879 5 75.3889 4.91713 74.1557 4.75138C72.9701 4.58564 71.6895 4.34622 70.3141 4.03315C69.081 3.77532 67.8954 3.54512 66.7571 3.34254C65.6663 3.13996 64.5518 3.03867 63.4135 3.03867C62.465 3.03867 61.6113 3.11234 60.8524 3.25967C60.1558 3.3859 59.3455 3.57393 58.4216 3.82377C57.6844 4.20097 56.6852 4.5273 55.4241 4.80277C53.859 5.13426 52.1042 5.3 50.1597 5.3C48.5946 5.3 47.2192 5.20792 46.0335 5.02376C44.8004 4.85801 43.4962 4.6186 42.1208 4.30553C40.8877 4.0477 39.7257 3.8175 38.6349 3.61492C37.4966 3.41234 36.3584 3.31105 35.2201 3.31105C34.2716 3.31105 33.4416 3.37551 32.7302 3.50442C32.4219 3.56429 32.0979 3.63327 31.7582 3.71138C30.999 4.15944 29.8746 4.53244 28.3852 4.83039C26.8675 5.14347 25.1364 5.3 23.1919 5.3C21.6268 5.3 20.2277 5.21713 18.9946 5.05138C17.8089 4.88564 16.5284 4.64623 15.153 4.33315C13.9199 4.07533 12.7342 3.84512 11.5959 3.64254C10.5051 3.43997 9.39058 3.33868 8.25232 3.33868C7.30378 3.33868 6.45009 3.41234 5.69126 3.55967C4.97985 3.68858 4.14988 3.88195 3.20133 4.13978L0 2.01271C0.758834 1.53389 1.89709 1.12873 3.41475 0.797241C4.97985 0.465749 6.73466 0.300003 8.67917 0.300003C10.2443 0.300003 11.6197 0.392084 12.8053 0.576247C14.0384 0.741993 15.3427 0.981403 16.7181 1.29448C17.9512 1.5523 19.1131 1.78251 20.204 1.98509C21.3422 2.18766 22.4805 2.28895 23.6187 2.28895C24.5673 2.28895 25.3972 2.2245 26.1086 2.09558C26.417 2.03572 26.741 1.96673 27.0806 1.88863C27.8399 1.44057 28.9642 1.06756 30.4537 0.769616C31.9714 0.456541 33.7024 0.300003 35.647 0.300003C37.2121 0.300003 38.6112 0.382876 39.8443 0.548622C41.0299 0.714368 42.3105 0.953778 43.6859 1.26685C44.919 1.52468 46.1046 1.75488 47.2429 1.95746C48.3337 2.16004 49.4483 2.26133 50.5865 2.26133C51.5351 2.26133 52.3887 2.18766 53.1476 2.04034C53.8442 1.9141 54.6545 1.72607 55.5785 1.47623C56.3156 1.09903 57.3148 0.772701 58.5759 0.497238C60.141 0.165746 61.8958 0 63.8403 0C65.4054 0 66.7808 0.0920812 67.9665 0.276244C69.1996 0.441989 70.5039 0.6814 71.8792 0.994475C73.1124 1.2523 74.2743 1.4825 75.3651 1.68508C76.5034 1.88766 77.6416 1.98895 78.7799 1.98895C79.7284 1.98895 80.5584 1.92449 81.2698 1.79558C81.5782 1.73571 81.9022 1.66672 82.2419 1.58861C83.0011 1.14056 84.1254 0.767557 85.6149 0.469613C87.1326 0.156538 88.8637 0 90.8082 0C92.3733 0 93.7724 0.0828732 95.0055 0.248619C96.1911 0.414365 97.4717 0.653775 98.8471 0.966851C100.08 1.22468 101.266 1.45488 102.404 1.65746C103.495 1.86004 104.609 1.96133 105.748 1.96133C106.696 1.96133 107.55 1.88766 108.309 1.74033C109.02 1.61142 109.85 1.41805 110.799 1.16022L114 3.28729C113.241 3.76611 112.103 4.17127 110.585 4.50276C109.02 4.83425 107.265 5 105.321 5C103.756 5 102.38 4.90792 101.195 4.72376C99.9616 4.55801 98.6574 4.3186 97.282 4.00553C96.0489 3.7477 94.8869 3.5175 93.7961 3.31492C92.6578 3.11234 91.5196 3.01105 90.3813 3.01105C89.4328 3.01105 88.6028 3.07551 87.8914 3.20442C87.583 3.26429 87.259 3.33328 86.9194 3.41139C86.1601 3.85944 85.0358 4.23244 83.5463 4.53039C82.0287 4.84346 80.2976 5 78.353 5Z" fill="url(#paint0_linear)"/>

      </React.Fragment>

    ),
    viewBox: `0 0 30 30`,
  },
  circle: {
    shape: (
       <React.Fragment>
 <path d="M19.7557911,2.21895043 L34.3867068,29.0422957 C34.9156322,30.0119924 34.5583166,31.2268657 33.5886199,31.7557911 C33.2948427,31.9160333 32.9655536,32 32.6309156,32 L3.36908438,32 C2.26451488,32 1.36908438,31.1045695 1.36908438,30 C1.36908438,29.665362 1.45305112,29.3360729 1.61329323,29.0422957 L16.2442089,2.21895043 C16.7731343,1.24925376 17.9880076,0.891938091 18.9577043,1.42086355 C19.2948373,1.6047543 19.5719004,1.8818174 19.7557911,2.21895043 Z" id="path-1"></path>
        <filter x="-5.9%" y="-4.0%" width="125.7%" height="135.8%" filterUnits="objectBoundingBox" id="filter-2">
            <feOffset dx="3" dy="5" in="SourceAlpha" result="shadowOffsetOuter1"></feOffset>
            <feGaussianBlur stdDeviation="1" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur>
            <feColorMatrix values="0 0 0 0 0.0901960784   0 0 0 0 0.062745098   0 0 0 0 0.250980392  0 0 0 1 0" type="matrix" in="shadowBlurOuter1"></feColorMatrix>
        </filter>
    <g id="Symbols" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
        <g id="Rectangle" transform="translate(-1.000000, -1.000000)">
            <use fill="black" fill-opacity="1" filter="url(#filter-2)" ></use>
            <use fill="#0099FF" fill-rule="evenodd"></use>
        </g>
    </g>
      </React.Fragment>    ),
    viewBox: `300 300 300 300`,
  },
  arrowUp: {
    shape: (
      <React.Fragment>
       <path d="M0 3V0H94V3H0Z" fill="url(#paint0_linear)"/>
<defs>
<linearGradient id="paint0_linear" x1="0" y1="0" x2="98.7" y2="0" gradientUnits="userSpaceOnUse">
<stop stop-color="#6633FF"/>
<stop offset="0.567708" stop-color="#3366FF"/>
<stop offset="1" stop-color="#0099FF"/>
</linearGradient>
</defs>    </React.Fragment>
    ),
    viewBox: `300 300 300 300`,
  },
  upDown: {
    shape: (
      <React.Fragment>
        <path d="M28.74,44.58a1.28,1.28,0,0,1-1-.51L15.16,27.13l-12.89,17a1.26,1.26,0,1,1-2-1.53l13.9-18.29a1.34,1.34,0,0,1,1-.5,1.24,1.24,0,0,1,1,.51L29.75,42.56a1.27,1.27,0,0,1-1,2Z" />
        <path d="M14.83,20.82h0a1.28,1.28,0,0,1-1-.52L.25,2a1.27,1.27,0,0,1,2-1.51L14.84,17.45,27.73.5a1.26,1.26,0,0,1,2,1.53L15.84,20.32A1.28,1.28,0,0,1,14.83,20.82Z" />
      </React.Fragment>
    ),
    viewBox: `300 300 300 300`,
  },
  box: {
    shape: (
            <React.Fragment>

        <polygon id="path-2" points="50.9434783 26.7619247 50.9434783 19.7619247 0.443478261 19.7619247 0.443478261 26.7619247"></polygon>
    
        <path d="M38.1966527,14.7238494 C41.3974895,14.7238494 43.9759414,14.1903766 45.9320084,13.123431 C47.8880753,12.0564854 49.5774059,10.6338912 51,8.85564854 L51,8.85564854 L47.4790795,4.16108787 C45.8430962,5.37029289 44.4027197,6.2416318 43.1579498,6.7751046 C41.9131799,7.30857741 40.4016736,7.57531381 38.623431,7.57531381 C36.41841,7.57531381 34.3556485,7.21966527 32.4351464,6.5083682 C30.5146444,5.79707113 28.5585774,4.94351464 26.5669456,3.94769874 C24.0774059,2.73849372 21.8190377,1.77824268 19.791841,1.06694561 C17.7646444,0.355648536 15.4351464,0 12.8033473,0 C9.60251046,0 7.02405858,0.533472803 5.06799163,1.60041841 C3.11192469,2.66736402 1.42259414,4.08995816 0,5.86820084 L0,5.86820084 L3.5209205,10.5627615 C5.15690377,9.35355649 6.59728033,8.48221757 7.84205021,7.94874477 C9.08682008,7.41527197 10.5983264,7.14853556 12.376569,7.14853556 C14.58159,7.14853556 16.6443515,7.5041841 18.5648536,8.21548117 C20.4853556,8.92677824 22.4414226,9.78033473 24.4330544,10.7761506 C26.9225941,11.9853556 29.1809623,12.9456067 31.208159,13.6569038 C33.2353556,14.3682008 35.5648536,14.7238494 38.1966527,14.7238494 Z" id="path-4"></path>
 
          </React.Fragment>
   ),
    viewBox: `0 0 30 30`,
  },
  hexa: {
    shape: (
                  <React.Fragment>

        <circle id="path-1" cx="32" cy="32" r="16"></circle>
       
              </React.Fragment>

    ),
    viewBox: `300 300 300 300`,
  },
  cross: {
    shape: (
      <path
        strokeWidth="3px"
        d="M60.5,50l34.8-34.8c2.9-2.9,2.9-7.6,0-10.5c-2.9-2.9-7.6-2.9-10.5,0L50,39.5L15.2,4.7c-2.9-2.9-7.6-2.9-10.5,0    c-2.9,2.9-2.9,7.6,0,10.5L39.5,50L4.7,84.8c-2.9,2.9-2.9,7.6,0,10.5c1.4,1.4,3.3,2.2,5.2,2.2s3.8-0.7,5.2-2.2L50,60.5l34.8,34.8    c1.4,1.4,3.3,2.2,5.2,2.2c1.9,0,3.8-0.7,5.2-2.2c2.9-2.9,2.9-7.6,0-10.5L60.5,50z"
      />
    ),
    viewBox: `300 300 300 300`,
  },
}

type IconType = "triangle" | "circle" | "arrowUp" | "upDown" | "box" | "hexa" | "cross"

type SVGProps = {
  stroke?: boolean
  color?: string | number | any
  width: number
  icon: IconType
  left: string
  top: string
  hiddenMobile?: boolean
}

const SVG = ({ stroke = false, color = `#0000000`, width, icon, left, top, hiddenMobile = false }: SVGProps) => (
  <svg
    sx={{
      position: `absolute`,
      stroke: stroke ? `currentColor` : `none`,
      fill: stroke ? `none` : `currentColor`,
      display: hiddenMobile ? hidden : `block`,
      color,
      width,
      left,
      top,
    }}
    viewBox={icons[icon].viewBox}
  >
    {icons[icon].shape}
  </svg>
)

export default SVG
